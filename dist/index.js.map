{"version":3,"file":"index.js","sources":["../src/Stl.js","../src/index.js"],"sourcesContent":["import * as THREE from 'three'\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\n\nlet camera, cameraTarget, scene, renderer, controls\nexport default function Stl(\n  width,\n  height,\n  url,\n  objectColor,\n  gridLineColor,\n  skyboxColor,\n  groundColor,\n  lightColor,\n  volume\n) {\n  // scene setup\n\n  scene = new THREE.Scene()\n  scene.background = new THREE.Color(skyboxColor)\n  scene.fog = new THREE.Fog(0xa0a0a0, 200, 1000)\n\n  // camera setup\n  camera = new THREE.PerspectiveCamera(45, width / height, 1, 1000)\n  camera.position.set(200, 100, 200)\n\n  cameraTarget = new THREE.Vector3(0, 0, 0)\n  camera.position.z = 5 * 2;\n  // renderer setup\n  renderer = new THREE.WebGLRenderer({\n    antialias: true,\n    alpha: true,\n    preserveDrawingBuffer: true\n  })\n  renderer.setSize(width, height)\n\n  // where to render your scene\n  document.getElementById('stlviewer').innerHTML = ''\n  document.getElementById('stlviewer').appendChild(renderer.domElement)\n\n  // controls\n  controls = new OrbitControls(camera, renderer.domElement)\n  controls.target.set(0, 0, 0)\n  controls.update()\n\n  // ground\n\n  const ground = new THREE.Mesh(\n    new THREE.PlaneGeometry(2000, 2000),\n    new THREE.MeshPhongMaterial({ color: groundColor, depthWrite: false })\n  )\n  ground.rotation.x = -Math.PI / 2\n  ground.receiveShadow = true\n  scene.add(ground)\n\n  // const grid = new THREE.GridHelper(2000, 20, gridLineColor, gridLineColor)\n  // grid.material.opacity = 0.2\n  // grid.material.transparent = true\n  // scene.add(grid)\n\n  // lights\n  const hemiLight = new THREE.HemisphereLight(0xffffff, 0x444444)\n  hemiLight.position.set(0, 200, 0)\n  scene.add(hemiLight)\n\n  const directionalLight = new THREE.DirectionalLight(lightColor)\n  directionalLight.position.set(0, 200, 100)\n  directionalLight.castShadow = true\n  directionalLight.shadow.camera.top = 180\n  directionalLight.shadow.camera.bottom = -100\n  directionalLight.shadow.camera.left = -120\n  directionalLight.shadow.camera.right = 120\n  scene.add(directionalLight)\n\n  // adding stl to scene\n  const loader = new STLLoader()\n  loader.load(url, (geometry) => {\n    const material = new THREE.MeshPhongMaterial({\n      color: objectColor,\n      specular: 0x111111,\n      shininess: 200\n    })\n    const mesh = new THREE.Mesh(geometry, material)\n\n    mesh.position.set(0, 0, 0)\n    mesh.rotation.set(-Math.PI / 2, 0, 0)\n    mesh.scale.set(1.5, 1.5, 1.5)\n\n    mesh.castShadow = true\n    mesh.receiveShadow = true\n\n    const signedVolumeOfTriangle = (p1, p2, p3) => {\n      return p1.dot(p2.cross(p3)) / 6.0\n    }\n    let position = geometry.attributes.position\n    let faces = position.count / 3\n    let sum = 0\n    let p1 = new THREE.Vector3(),\n      p2 = new THREE.Vector3(),\n      p3 = new THREE.Vector3()\n    for (let i = 0; i < faces; i++) {\n      p1.fromBufferAttribute(position, i * 3 + 0)\n      p2.fromBufferAttribute(position, i * 3 + 1)\n      p3.fromBufferAttribute(position, i * 3 + 2)\n      sum += signedVolumeOfTriangle(p1, p2, p3)\n    }\n    volume(sum)\n\n    scene.add(mesh)\n  })\n\n  // renderer\n\n  renderer.setPixelRatio(window.devicePixelRatio)\n  renderer.outputEncoding = THREE.sRGBEncoding\n\n  renderer.shadowMap.enabled = true\n\n  function onWindowResize() {\n    camera.aspect = window.innerWidth / height\n    camera.updateProjectionMatrix()\n\n    renderer.setSize(window.innerWidth, height)\n  }\n\n  const animate = () => {\n    requestAnimationFrame(animate)\n    render()\n  }\n\n  const render = () => {\n    camera.lookAt(cameraTarget)\n    renderer.render(scene, camera)\n  }\n  animate()\n  // window.addEventListener('resize', onWindowResize)\n}\n","import React, { useEffect } from 'react'\nimport Stl from './Stl'\n\nexport const StlViewer = ({\n  width,\n  height,\n  url,\n  objectColor,\n  gridLineColor,\n  skyboxColor,\n  groundColor,\n  lightColor,\n  volume\n}) => {\n  useEffect(() => {\n    Stl(\n      width,\n      height,\n      url,\n      objectColor,\n      gridLineColor,\n      skyboxColor,\n      groundColor,\n      lightColor,\n      volume\n    )\n  }, [url])\n  return <div id='stlviewer'></div>\n}\n"],"names":["camera","cameraTarget","scene","renderer","controls","Stl","width","height","url","objectColor","gridLineColor","skyboxColor","groundColor","lightColor","volume","THREE","background","fog","position","set","z","antialias","alpha","preserveDrawingBuffer","setSize","document","getElementById","innerHTML","appendChild","domElement","OrbitControls","target","update","ground","color","depthWrite","rotation","x","Math","PI","receiveShadow","add","hemiLight","directionalLight","castShadow","shadow","top","bottom","left","right","loader","STLLoader","load","geometry","material","specular","shininess","mesh","scale","signedVolumeOfTriangle","p1","p2","p3","dot","cross","attributes","faces","count","sum","i","fromBufferAttribute","setPixelRatio","window","devicePixelRatio","outputEncoding","shadowMap","enabled","animate","requestAnimationFrame","render","lookAt","StlViewer","useEffect","React"],"mappings":"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"}